@page "/cervezaform"
@page "/cervezaform/{Id:int}"


@using System.Net.Http
@using System.Net.Http.Json

@using Data

@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>CervezaForm</h3>

<EditForm Model="@oCerveza">
    <div class="container-fluid">

        <div class="form-group row mb-1">
            <label class="col-sm-3">Nombre</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oCerveza.Nombre"></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <label class="col-sm-3">Marca</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oCerveza.Marca"></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="Save">Guardar</button>
            </div>
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    public string Url = "/api/Cerveza";
    TipoCerveza oCerveza = new();
    Respuesta<TipoCerveza> oRta = new();

    private async Task Save()
    {
        if (Id != 0)
        {
            var response = await Http.PutAsJsonAsync<TipoCerveza>(Url, oCerveza);
            oRta = response.Content.ReadFromJsonAsync<Respuesta<TipoCerveza>>().Result;
        }
        else
        {
            var response = await Http.PostAsJsonAsync<TipoCerveza>(Url, oCerveza);
            oRta = response.Content.ReadFromJsonAsync<Respuesta<TipoCerveza>>().Result;
        }
        NavigationManager.NavigateTo("/cervezas");
    }

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            oRta = await Http.GetFromJsonAsync<Respuesta<TipoCerveza>>(Url + "/" + Id);
            oCerveza = oRta.Data;
        }
    }
}
